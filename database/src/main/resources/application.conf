akka {
  loglevel = "ERROR"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
//    provider = "cluster"
    serializers {
//      java = "akka.serialization.JavaSerializer"
//      proto = "akka.remote.serialization.ProtobufSerializer"
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    serialization-bindings {
      "java.io.Serializable" = kryo
    }
    enable-additional-serialization-bindings = on
    allow-java-serialization = off
//    // TODO: Don't use java serializer
    warn-about-java-serializer-usage = false
    // Use this setting to test serialization of messages in a local scenario.
//     serialize-messages = on
  }
  remote {
//    transport = "akka.remote.netty.NettyRemoteTransport"
    log-remote-lifecycle-events = on
    netty.tcp {
      bind-hostname = 0.0.0.0
      bind-port = 2552


//      hostname = "127.0.0.1"
      hostname = ""
      port = 2552
//      bind-port = 0

      message-frame-size =  30000000b
      send-buffer-size =  30000000b
      receive-buffer-size =  30000000b
      maximum-frame-size = 30000000b
    }
  }

  cluster {
//    seed-nodes = [
//      "akka.tcp://ClusterSystem@127.0.0.1:2552",
//      "akka.tcp://ClusterSystem@127.0.0.1:2553"]

    seed-nodes = [
      "akka.tcp://SvedeB@172.16.64.55:2552"
    ]

//    seed-nodes = [
//      "akka.tcp://SvedeB@127.0.0.1:2552"
//    ]


    # Needed when running many actor systems in the same JVM
//    jmx.multi-mbeans-in-same-jvm = on
  }
}